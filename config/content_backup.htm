<h1>About</h1>
<p><a href="https://github.com/mdecycu/cmsite"> https://github.com/mdecycu/cmsite</a></p>
<p><a href="https://41223108.github.io/cp2023/content/index.html">https://41223108.github.io/cp2023/content/index.html</a>(個人倉儲連結)</p>
<p><a href="https://github.com/41223136/cp2023_ag2">https://github.com/41223136/cp2023_ag2</a> (分組倉儲連結)</p>
<h1>倉儲維護</h1>
<h1>weekly progress</h1>
<h2>w1~4</h2>
<p><strong>建立帳號與網站</strong></p>
<p>利用已經帶有 Brython 執行環境的倉儲, 在設定學員 Github Classroom 首次作業時, 即經由 template 置入, 因此學員只要:</p>
<p>利用學校 email 帳號, 建立 Github 帳號, 以英文姓名縮寫加上一組數字, 選擇最短帳號名稱 例如: jfk40723199, jfk 為其自選的姓名縮寫, 而隨後則加上各自的學號.</p>
<p>擁有 Github 帳號後, 即可透過 Github Classroom assignment 連結取得作業倉儲, 自行在倉儲中設定 Github Pages 後, 即可啟用作業網站 (以下<span> </span><span>所謂<span>網站均指靜態網站</span><span> </span></span>, 而用來編輯網站內容的<span>動態網站, 則統稱為網際內容編輯器</span>, 使用動態網站的目的在編輯靜態網站的內容). 網站內容經過編輯之後, 必須建立新的網站內容 (使用 generate_pages), 然後將新的網站內容更新到對應的 Github 倉儲中 (稱為改版, 其過程經歷 git add, git commit 與 git push 等階段).</p>
<p>git 為分散式版次管理系統工具.</p>
<p>git add</p>
<p>git commit</p>
<p>git push</p>
<p>採用 Github Classroom 建立作業倉儲的問題:</p>
<p>2023/09/26 在 1a w3 課程進行到建立各學員 site 作業時發現, 將 Replit 導入 Github 倉儲的流程中, 所產生的系統間權限設定, 必須由 Github Classroom 管理帳號 (以 cp2023 為例, 附屬在 mdecp2023 帳號下), 針對各用戶所提出的個別 Replit 權限 requests (以 site-scrum-1 倉儲為例, 只能透過 Replit 提出控管 mdecp2023/site-scrum-1 倉儲的權限)<span> </span><span>逐一進行設定</span>.</p>
<p><img alt="" class="add_border" height="310" src="https://mde.tw/cpnote/images/mdecp2023_replit_requests.png" width="400"/></p>
<p>(上圖顯示共有三名用戶針對 mdecp2023 帳號下的 Github Classroom 倉儲提出 Replit 連線要求, 其中只有最上方用戶的 request 取得 mdecp2023/site-scrum-1 倉儲的維護權限, 其餘兩則 requests 則仍處於待審核階段. 意即若要讓各用戶整合 Replit,<span> </span><span>每一個 Github Classroom 作業, 管理者都必須手動處理超過兩百則的 requests</span>)</p>
<p>為去除管理者的手動設定負擔, 決定 2023 cp 與 cad 等課程將放棄使用 Github Classroom. 改為由各學員自行針對課程建立用來評分的課程倉儲與網站 (cp 課程建立 cp2023 倉儲, cad 課程則建立 cad2023 倉儲), 直接附屬在學員的 Github 帳號下, 後續的 submodule 設定與倉儲協同權限則統一由各學員自行負責</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EflMzDYwTjdIm2KJB7SCYkwB1_6UTQ4mzUdDx-bwN22E8A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=ZN0EPP"></a></p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_568738"></div>
</div>
<h2>w5</h2>
<p>要先在replit.nix新增程式庫</p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_336075">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp plain">{ pkgs }: {</code></div>
<div class="line number2 index1 alt1"><code class="cpp spaces">    </code><code class="cpp plain">deps = [</code></div>
<div class="line number3 index2 alt2"><code class="cpp spaces">      </code><code class="cpp plain">pkgs.gnuplot</code></div>
<div class="line number4 index3 alt1"><code class="cpp spaces">      </code><code class="cpp plain">pkgs.ncurses.dev</code></div>
<div class="line number5 index4 alt2"><code class="cpp spaces">      </code><code class="cpp plain">pkgs.gd</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">    </code><code class="cpp plain">];</code></div>
<div class="line number7 index6 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>曲線圖程式與圖片</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">// 包含標準輸出入程式庫的標頭文件
// https://blog.csdn.net/weixin_38468077/article/details/101069365
// http://www.gnuplot.info/demo/
// https://github.com/sysprog21/rv32emu
// https://github.com/sysprog21/semu 
// https://docs.google.com/presentation/d/14N0cWG2SnBSqhc2cLF0_2VerB9FF8JN3
// https://cs61c.org/fa23/
// https://greenteapress.com/wp/think-python-2e/
// https://github.com/ecalvadi/c99-examples
// https://github.com/gouravthakur39/beginners-C-program-examples
// https://github.com/ergenekonyigit/Numerical-Analysis-Examples
// https://www.che.ncku.edu.tw/facultyweb/changct/html/teaching/CPPandMATLAB/Past/pdf%20Files/Chap02-Ling.pdf
// https://gteceducation.com.sg/Brochures/PROGRAMMING/C%20PROGRAMMING%20FULL.pdf
// https://jsommers.github.io/cbook/cbook.pdf
// https://jsommers.github.io/cbook/index.html
// http://student.itee.uq.edu.au/courses/csse2310/CProgrammingNotes.pdf
// http://cslibrary.stanford.edu/101/EssentialC.pdf
// https://publications.gbdirect.co.uk/c_book/
// https://www.fossil-scm.org/fossil-book/doc/2ndEdition/fossilbook.pdf
// ***** execute on replit 
// cd downloads
// cc gnuplot_ex1.c -o gnuplot_ex1
// ./gnuplot_ex1
#include &lt;stdio.h&gt;
   
// 主函式
int main() {
    // Start a Gnuplot process using popen
    FILE *gnuplotPipe = popen("gnuplot -persistent", "w");
    if (!gnuplotPipe) {
        fprintf(stderr, "Failed to start Gnuplot.\n");
        return 1;
    }
   
    // Use Gnuplot plotting commands, specify font and output as PNG
    fprintf(gnuplotPipe, "set terminal png font 'default,10' size 800,400\n");
    fprintf(gnuplotPipe, "set output './../images/gnuplot_ex1.png'\n");
    fprintf(gnuplotPipe, "plot sin(x)");
    // Close popen
    pclose(gnuplotPipe);
   
    return 0;
}
</pre>
<p><img alt="" height="200" src="/images/gnuplot_ex1.png" width="400"/></p>
<h2>w6</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">// https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China
// 內政部國旗參考資料: https://www.moi.gov.tw/cp.aspx?n=10621
// cc roc_flag_in_gd.c -lgd -lm to link with gd and math library
// https://www.rapidtables.com/web/color/RGB_Color.html
// 幾何形狀著色與繪圖練習
// 以下 gd 繪圖程式嘗試畫出 ROC 國旗, 請根據下列程式內容完成後續的國旗繪圖
#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;
 
void draw_roc_flag(gdImagePtr img);
void draw_white_sun(gdImagePtr img, int x, int y, int size, int color);
 
int main() {
    // width 3: height 2
    int width = 1200;
    // 國旗長寬比為 3:2
    int height = (int)(width*2.0 / 3.0);
 
    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);
 
    draw_roc_flag(img);
 
    FILE *outputFile = fopen("./../images/roc_flag_in_gd.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
    return 0;
}
 
void draw_roc_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);
    int red, white, blue;
    // 白日位於青天面積正中央, 因此中心點座標為長寬各 1/4 處
    int center_x = (int)(width/4);
    int center_y = (int)(height/4);
    // gdImageFilledEllipse 需以長寬方向的 diameter 作圖
    // 由於中央白日圓形的半徑為青天寬度的 1/8
    // 因此中央白日圓形的直徑為青天寬度的 1/4, 也就是國旗寬度的 1/8
    // 而且白日十二道光芒的外圍圓形其半徑也是國旗寬度的1/8
    int sun_radius = (int)(width/8);
    // 中央白日圓形的直徑等於十二道光芒外圍圓形的半徑
    int white_circle_dia = sun_radius;
    // 中央藍色圓形半徑為中央白日的 1又 2/15
    int blue_circle_dia = white_circle_dia +  white_circle_dia*2/15;
    // 根據 https://www.moi.gov.tw/cp.aspx?n=10621 訂定國旗三種顏色值
    red = gdImageColorAllocate(img, 255, 0, 0); // 紅色
    white = gdImageColorAllocate(img, 255, 255, 255); // 白色
    blue = gdImageColorAllocate(img, 0, 0, 149); // 藍色
    // 根據畫布大小塗上紅色長方形區域
    gdImageFilledRectangle(img, 0, 0, width, height, red);
    // 青天面積為整面國旗的 1/4, 也是採用長方形塗色
    gdImageFilledRectangle(img, 0, 0, (int)(width/2.0), (int)(height/2.0), blue);
    // 先設法以填色畫出六個白色堆疊菱形
    draw_white_sun(img, center_x, center_y, sun_radius, white);
    // 利用一個藍色大圓與白色小圓畫出藍色環狀
    gdImageFilledEllipse(img, center_x, center_y, blue_circle_dia, blue_circle_dia, blue);
    gdImageFilledEllipse(img, center_x, center_y, white_circle_dia, white_circle_dia, white);
 
}
 
void draw_white_sun(gdImagePtr img, int center_x, int center_y, int sun_radius, int color) {
    // M_PI 大小定義於 math.h 標頭檔中, 因為三角函數中採用徑度為角度單位
    // 因此定義將角度轉為徑度的轉換變數為 deg, 角度值乘上 deg 就可轉為徑度
    float deg = M_PI/180;
    // 根據十二道光芒的每一尖角的角度為 15 度, 求出其對應直角三角形的另一角度為 75 度
    // 求出十二道光芒中任一菱形的 small radius, 也就是菱形的另一個對應小圓的半徑大小
    float sr = sun_radius/tan(75*deg);
    int ax, ay, bx, by, dx, dy, ex, ey;
    gdPoint points[4];
    /* 在塗上十二道光芒中的單一菱形區域之前, 先以座標點畫線測試是否正確
    ax = center_x;
    ay = center_y - sun_radius;
    bx = center_x - sun_radius*tan(15*deg);
    by = center_y;
    ex = center_x;
    ey = center_y + sun_radius;
    dx = center_x + sun_radius*tan(15*deg);
    dy = center_y;
    // AB
    gdImageLine(img, ax, ay, bx, by, color);
    // BE
    gdImageLine(img, bx, by, ex, ey, color);
    // ED
    gdImageLine(img, ex, ey, dx, dy, color);
    // DA
    gdImageLine(img, dx, dy, ax, ay, color);
    */
    ax = center_x;
    ay = center_y - sun_radius;
    bx = center_x - sun_radius*tan(15*deg);
    by = center_y;
    ex = center_x;
    ey = center_y + sun_radius;
    dx = center_x + sun_radius*tan(15*deg);
    dy = center_y;
    // 確定單一菱形區域的塗色正確後, 利用迴圈每次轉動 30 度, 總共轉六次即可塗上十二道光芒區域
    for (int i=1;i&lt;=6;i++){
    // A
    points[0].x = ax+sun_radius*sin(30*deg*i);
    points[0].y = ay+sun_radius-sun_radius*cos(30*deg*i);
    // B
    points[1].x = bx+sr-sr*cos(30*deg*i);
    points[1].y = by-sr*sin(30*deg*i);
    // E
    points[2].x = ex-sun_radius*sin(30*deg*i);
    points[2].y = ey-(sun_radius-sun_radius*cos(30*deg*i));
    // D
    points[3].x = dx-(sr-sr*cos(30*deg*i));
    points[3].y = dy+sr*sin(30*deg*i);
    // 對菱形區域範圍塗色
    gdImageFilledPolygon(img, points, 4, color);
    // 在菱形區域外圍畫線, 明確界定菱形範圍
    gdImagePolygon(img, points, 4, color);
    }
}</pre>
<p><img alt="" height="267" src="/images/roc_flag_in_gd.png" width="400"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;
 
void draw_usa_flag(gdImagePtr img);
void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle);
 
int main() {
    int width = 800;
    int height = (int)(width / 1.9);
 
    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);
 
    draw_usa_flag(img);
 
    FILE *outputFile = fopen("./../images/usa_flag.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "打开输出文件时出错。\n");
        return 1;
    }
 
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
 
    return 0;
}
 
void draw_usa_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);
    int red, white, blue;
    // 国旗颜色
    red = gdImageColorAllocate(img, 178, 34, 52); // 红色条纹
    white = gdImageColorAllocate(img, 255, 255, 255); // 白色条纹
    blue = gdImageColorAllocate(img, 60, 59, 110); // 蓝色矩形
 
    int stripe_height = height / 13;
    int stripe_width = width;
    int star_size = (int)(0.0308 * height); // 星星大小
 
    for (int y = 0; y &lt; height; y += stripe_height) {
        if (y / stripe_height % 2 == 0) {
            gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, red);
        } else {
            gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, white);
        }
    }
 
    gdImageFilledRectangle(img, 0, 0, width * 2 / 5, stripe_height * 7, blue);
 
    int star_spacing_x = (int)(0.129 * height); // 横向星星之间的间距
    int star_spacing_y = (int)(0.054 * height); // 纵向星星之间的间距
    int star_start_x = (int)(0.125 * height); // 星星的起始X位置
    int star_start_y = (int)(0.0485 * height); // 星星的起始Y位置
 
    for (int row = 0; row &lt; 9; row++) {
        int starsPerRow = (row % 2 == 0) ? 6 : 5;
 
        // 计算2、4、6和8排星星的偏移量
        int offset_x = (row % 2 == 0) ? star_spacing_x / -2 : 0;
 
        for (int star = 0; star &lt; starsPerRow; star++) {
            int x = star_start_x + star * star_spacing_x + offset_x;
 
            // 旋转角度（以弧度为单位）
            double rotation_angle = M_PI / 5; // 忘記多少度的旋转
 
            int y = star_start_y + row * star_spacing_y;
            draw_star(img, x, y, star_size, white, rotation_angle);
        }
    }
}
 
void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle) {
    gdPoint points[10];
 
    for (int i = 0; i &lt; 10; i++) {
        double angle = M_PI / 2 + i * 2 * M_PI / 10 + rotation_angle;
        int radius = (i % 2 == 0) ? size : size / 2;
        points[i].x = x + radius * cos(angle);
        points[i].y = y + radius * sin(angle);
    }
 
    // 用指定的颜色填充星星
    gdImageFilledPolygon(img, points, 10, color);
}</pre>
<p><img alt="" height="211" src="/images/usa_flag.png" width="400"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_japan_flag(gdImagePtr img);
void draw_red_sun(gdImagePtr img, int x, int y, int size, int color);

int main() {
    int originalWidth = 1200;
    int originalHeight = (int)(originalWidth * 2.0 / 3.0);
    gdImagePtr img = gdImageCreateTrueColor(originalWidth, originalHeight);
    gdImageAlphaBlending(img, 0);

    draw_japan_flag(img);

    // 新的宽度和高度以适应 "images" 文件夹
    int newWidth = 600;
    int newHeight = (int)(newWidth * 2.0 / 3.0);

    // 创建新图像并进行缩放
    gdImagePtr resizedImage = gdImageCreateTrueColor(newWidth, newHeight);
    gdImageAlphaBlending(resizedImage, 0);
    gdImageCopyResampled(resizedImage, img, 0, 0, 0, 0, newWidth, newHeight, originalWidth, originalHeight);

  FILE *outputFile = fopen("./../images/japan_flag.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
    gdImagePng(resizedImage, outputFile);
    fclose(outputFile);
    gdImageDestroy(img);
    gdImageDestroy(resizedImage);

    return 0;
}

void draw_japan_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);

    // 创建一个白色背景
    int white = gdImageColorAllocate(img, 255, 255, 255);
    gdImageFilledRectangle(img, 0, 0, width - 1, height - 1, white);

    // 绘制红色圆圈（太阳）
    int red = gdImageColorAllocate(img, 255, 0, 0);
    int center_x = width / 2;
    int center_y = height / 2;
    int radius = (int)((width * 2) / 3);
    draw_red_sun(img, center_x, center_y, radius, red);
}

void draw_red_sun(gdImagePtr img, int x, int y, int size, int color) {
  // 減小 size 的值,例如將他的值減半
  size = size / 2;
    gdImageArc(img, x, y, size, size, 0, 360, color);
    gdImageFillToBorder(img, x, y, color, color);
}</pre>
<p><img alt="" height="267" src="/images/japan_flag.png" width="400"/></p>
<div class="line number1 index0 alt2"><code class="cpp preprocessor"></code></div>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;
 
void draw_chinese_flag(gdImagePtr img);
 
int main() {
    int width = 300; // 國旗寬度
    int height = 200; // 國旗高度
 
    gdImagePtr im = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(im, 0);
 
    draw_chinese_flag(im);
 
    FILE *outputFile = fopen("./../images/proc_flag.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "打开输出文件时出错。\n");
        return 1;
    }
 
    gdImagePngEx(im, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(im);
 
    return 0;
}
 
// 声明 draw_star 函数
void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle);
 
void draw_chinese_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);
    int red, yellow;
 
    // 國旗顏色
    red = gdImageColorAllocate(img, 255, 0, 0); // 紅色背景
    yellow = gdImageColorAllocate(img, 255, 255, 0); // 黃色星星
 
    // 畫紅色背景
    gdImageFilledRectangle(img, 0, 0, width, height, red);
 
    // 設置星星的大小和位置
    int star_size = (int)(0.28 * height);
    int star_x = (int)(0.165 * width);
    int star_y = (int)(0.265 * height);
 
    // 畫大星星
    draw_star(img, star_x, star_y, star_size, yellow, 11.0);
 
    // 繪製小星星，位置根據實際國旗比例計算
    double radius = 0.15 * height;
    double angle = 360 / 7 * M_PI / 179.0;
    double rotation = -M_PI / 7.5;
    int cx = (int)(0.32 * width);
    int cy = (int)(0.27 * height);
 
    for (int i = -1; i &lt; 3; i++) {
        int x = (int)(cx + radius * cos(i * angle + rotation));
        int y = (int)(cy + radius * sin(i * angle + rotation));
        draw_star(img, x, y, 19, yellow, M_PI / 5.0);
    }
}
 
void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle) {
    gdPoint points[10];
 
    // 计算星形的五个外点和五个内点
    double outer_radius = size / 2;
    double inner_radius = size / 6;
    double angle = M_PI / 5.0;
 
    for (int i = 0; i &lt; 10; i++) {
        double radius = (i % 2 == 0) ? outer_radius : inner_radius;
        double theta = rotation_angle + i * angle;
        points[i].x = x + radius * cos(theta);
        points[i].y = y + radius * sin(theta);
    }
 
    // 使用 gdImageFilledPolygon 绘制星形
    gdImageFilledPolygon(img, points, 10, color);
}</pre>
<p><img alt="" height="267" src="/images/proc_flag.png" width="400"/></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;
 
void draw_uk_flag(gdImagePtr img);
void fillTriangle(gdImagePtr img, int x1, int y1, int x2, int y2, int x3, int y3, int color);
 
int main() {
    // 设置国旗的宽和高
    int width = 1200;
    int height = width / 2;
 
    // 创建图像
    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);
 
    // 绘制英国国旗
    draw_uk_flag(img);
 
    // 将图像保存到文件
    FILE *outputFile = fopen("./../images/uk_flag.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "打开输出文件时发生错误。\n");
        return 1;
    }
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
    return 0;
}
 
 
 
void draw_uk_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);
 
    int red, white, blue;
    red = gdImageColorAllocate(img, 204, 0, 0);       // 红色
    white = gdImageColorAllocate(img, 255, 255, 255); // 白色
    blue = gdImageColorAllocate(img, 0, 0, 153);      // 蓝色
 
    gdImageFilledRectangle(img, 0, 0, width, height, blue);
 
 
  int x1, y1, x2, y2, x3, y3;
  {
    int line_thickness = 100;
    gdImageSetThickness(img, line_thickness);
 
    int x1, y1, x2, y2, x3, y3;
 
    // 绘制白色斜线
    x1 = 0;
    y1 = 600;
    x2 = 1200;
    y2 = 0;
    gdImageLine(img, x1, y1, x2, y2, white);
 
    x1 = 0;
    y1 = 0;
    x2 = 1200;
    y2 = 600;
    gdImageLine(img, x1, y1, x2, y2, white);
}
  {
    int line_thickness = 33;
    gdImageSetThickness(img, line_thickness);
 
 
    // 绘制红色斜线
    x1 = 566;
    y1 = 300;
    x2 = 1166;
    y2 = 0;
    gdImageLine(img, x1, y1, x2, y2, red);
 
    x1 = 1233;
    y1 = 600;
    x2 = 633;
    y2 = 300;
    gdImageLine(img, x1, y1, x2, y2, red);
 
    x1 = 566;
    y1 = 300;
    x2 = -33;
    y2 = 0;
    gdImageLine(img, x1, y1, x2, y2, red);
 
    x1 = 600;
    y1 = 316.5;
    x2 = 0;
    y2 = 616.5;
    gdImageLine(img, x1, y1, x2, y2, red);
  }
  {
  int line_thickness = 33;
  gdImageSetThickness(img, line_thickness);
 
  int x1, y1, x2, y2, x3, y3;
 
  // 绘制  斜线
  x1 = 0;
  y1 = 600;
  x2 = 1200;
  y2 = 0;
  gdImageLine(img, x1, y1, x2, y2, red );
 
 
  x1 = 1200;
    y1 = 16.5;
    x2 = 600;
    y2 = 316.5;
    gdImageLine(img, x1, y1, x2, y2, white);
 
 
  x1 = 0;
    y1 = 583.5;
    x2 = 600;
    y2 = 283.5;
    gdImageLine(img, x1, y1, x2, y2, white);
 
 
  }
 
    // 绘制白色十字
    int cross_width = width / 32;
    int cross_arm_width = width / 32;
    int center_x = width / 2;
    int center_y = height / 2;
 
    gdImageFilledRectangle(img, center_x + 2.7 * cross_width, 0, center_x - 2.7 * cross_width, height, white);
    gdImageFilledRectangle(img, 0, center_y + 2.7 * cross_arm_width, width, center_y - 2.7 * cross_arm_width, white);
 
    // 绘制红色十字
    gdImageFilledRectangle(img, center_x + 1.5 * cross_width, 0, center_x - 1.5 * cross_width, height, red);
    gdImageFilledRectangle(img, 0, center_y + 1.5 * cross_arm_width, width, center_y - 1.5 * cross_arm_width, red);
}</pre>
<p><img alt="" height="245" src="/images/uk_flag.png" width="490"/></p>
<h2>w7</h2>
<p>Map: site map 網站所有頁面<br/><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EYSoaecwXNlEg6KPxXltyK4BfgCwjLoxbtgvOGUlgjOx2w?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=GIvuYT"></a></p>
<div>
<p>EditA: edit all pages, 使用時機為(1)解決多人共用網站時的衝突, 或(2)刪除特定頁面</p>
<p>Edit: edit one page, 先選頁面, 再選 Edit 然後才能進入編輯模式</p>
<p>Config: 編輯網站標題, 若要編輯 site title, 必須更改 init.py 中的 site_title 字串內容</p>
<p>Search: 頁面資料 html 原始碼內容搜尋</p>
<p>IUpload: image upload, 影像檔案上傳, 資料會放入 images 目錄中</p>
<p>IList: image file list, 列出存在 images 目錄下的影像檔案</p>
<p>FUpload: file upload, 一般檔案上傳功能, 資料會放入 downloads 目錄中</p>
<p>FList: file list, 列出位於 downloads 目錄下的檔案</p>
<p>Logout: 登出</p>
<p>Convert: 將 config/content.htm 經過分頁程式處理後, 轉為 content 目錄下的超文件</p>
</div>
<p><span></span></p>
<p></p>
<h2>w9</h2>
<p>2b w8 作業: 請根據 <a href="https://mde.tw/cadnote/downloads/cad2023_2b_w8.txt">cad2023_2b_w8.txt</a> 檔案中的內容, 透過程式的讀取與篩選, 按照時間先後, 列出 2b 修課學員中已經登入 s1511.cycu.org 的學號. (修課學員名單 2a: <a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0838&amp;column=True">0838</a>, 2b: <a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0851&amp;column=True">0851</a>)</p>
<p>假如在近端處理, 必須同時儲存兩個檔案後, 進行資料選取:</p>
<p><a href="https://mde.tw/cpnote/downloads/get_stud_num_from_last_data.py">get_stud_num_from_last_data.py</a> (若採 Brython 編寫, 可以直接<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/f9f2fd6819ae9553d51990901aa694073d51439a/get_stud_num_from_last_data.py">列出結果</a>, 依照登入時間先後排序, 其中 41123227 為管理者最早測試時登入, 若採用 ANSI 編寫:<span> </span><a href="https://mde.tw/cpnote/downloads/c_parse_last_cp2023.7z">c_parse_last_cp2023.7z</a>)</p>
<p>read_last_final1.c 原始碼:</p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_538360">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
<div class="line number89 index88 alt2">89</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;string.h&gt;</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number5 index4 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Open the user file for reading</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code><code class="cpp plain">* user_file = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"2b_user_list.txt"</code><code class="cpp plain">, </code><code class="cpp string">"r"</code><code class="cpp plain">);</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(user_file == NULL) {</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"Error opening user file"</code><code class="cpp plain">);</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number11 index10 alt2"> </div>
<div class="line number12 index11 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">char</code> <code class="cpp plain">line[100]; </code><code class="cpp comments">// Assuming a maximum line length of 100 characters</code></div>
<div class="line number13 index12 alt2"> </div>
<div class="line number14 index13 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">char</code> <code class="cpp plain">valid_users[100][20]; </code><code class="cpp comments">// Assuming a maximum of 100 valid users with a length of 20 characters each</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">valid_user_count = 0;</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Read and store the student numbers from the user file</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">while</code> <code class="cpp plain">(</code><code class="cpp functions bold">fgets</code><code class="cpp plain">(line, </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(line), user_file)) {</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">        </code><code class="cpp plain">line[</code><code class="cpp functions bold">strcspn</code><code class="cpp plain">(line, </code><code class="cpp string">"\n"</code><code class="cpp plain">)] = </code><code class="cpp string">'\0'</code><code class="cpp plain">; </code><code class="cpp comments">// Remove the newline character</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(valid_users[valid_user_count], line);</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">        </code><code class="cpp plain">valid_user_count++;</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Close the user file</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(user_file);</code></div>
<div class="line number26 index25 alt1"> </div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Open the CAD file for reading</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code><code class="cpp plain">* cad_file = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"cad2023_2b_w8.txt"</code><code class="cpp plain">, </code><code class="cpp string">"r"</code><code class="cpp plain">);</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(cad_file == NULL) {</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">perror</code><code class="cpp plain">(</code><code class="cpp string">"Error opening CAD file"</code><code class="cpp plain">);</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number33 index32 alt2"> </div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">char</code> <code class="cpp plain">unique_users[100][20]; </code><code class="cpp comments">// Assuming a maximum of 100 unique users with a length of 20 characters each</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">unique_user_count = 0;</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Read the CAD file line by line</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">while</code> <code class="cpp plain">(</code><code class="cpp functions bold">fgets</code><code class="cpp plain">(line, </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(line), cad_file)) {</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">        </code><code class="cpp color1 bold">char</code><code class="cpp plain">* token = </code><code class="cpp functions bold">strtok</code><code class="cpp plain">(line, </code><code class="cpp string">" "</code><code class="cpp plain">); </code><code class="cpp comments">// Split the line by space</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(token != NULL &amp;&amp; </code><code class="cpp functions bold">strstr</code><code class="cpp plain">(token, </code><code class="cpp string">"cad"</code><code class="cpp plain">) == token) {</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">            </code><code class="cpp comments">// Extract the student number (skip "cad")</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">            </code><code class="cpp color1 bold">char</code> <code class="cpp plain">student_number[20]; </code><code class="cpp comments">// Assuming a maximum length of 20 characters for a student number</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">            </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(student_number, token + 3); </code><code class="cpp comments">// Skip "cad"</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">            </code> </div>
<div class="line number45 index44 alt2"><code class="cpp spaces">            </code><code class="cpp comments">// Check if the student number is in the list of valid users and not a duplicate</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">            </code><code class="cpp color1 bold">int</code> <code class="cpp plain">is_valid = 0;</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">            </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; valid_user_count; i++) {</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">                </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(</code><code class="cpp functions bold">strcmp</code><code class="cpp plain">(valid_users[i], student_number) == 0) {</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">                    </code><code class="cpp plain">is_valid = 1;</code></div>
<div class="line number50 index49 alt1"><code class="cpp spaces">                    </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">                </code><code class="cpp plain">}</code></div>
<div class="line number52 index51 alt1"><code class="cpp spaces">            </code><code class="cpp plain">}</code></div>
<div class="line number53 index52 alt2"><code class="cpp spaces">            </code> </div>
<div class="line number54 index53 alt1"><code class="cpp spaces">            </code><code class="cpp comments">// Add the student number to the unique_users list if it's valid and not a duplicate</code></div>
<div class="line number55 index54 alt2"><code class="cpp spaces">            </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(is_valid) {</code></div>
<div class="line number56 index55 alt1"><code class="cpp spaces">                </code><code class="cpp color1 bold">int</code> <code class="cpp plain">is_duplicate = 0;</code></div>
<div class="line number57 index56 alt2"><code class="cpp spaces">                </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; unique_user_count; i++) {</code></div>
<div class="line number58 index57 alt1"><code class="cpp spaces">                    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(</code><code class="cpp functions bold">strcmp</code><code class="cpp plain">(unique_users[i], student_number) == 0) {</code></div>
<div class="line number59 index58 alt2"><code class="cpp spaces">                        </code><code class="cpp plain">is_duplicate = 1;</code></div>
<div class="line number60 index59 alt1"><code class="cpp spaces">                        </code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div>
<div class="line number61 index60 alt2"><code class="cpp spaces">                    </code><code class="cpp plain">}</code></div>
<div class="line number62 index61 alt1"><code class="cpp spaces">                </code><code class="cpp plain">}</code></div>
<div class="line number63 index62 alt2"><code class="cpp spaces">                </code> </div>
<div class="line number64 index63 alt1"><code class="cpp spaces">                </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!is_duplicate) {</code></div>
<div class="line number65 index64 alt2"><code class="cpp spaces">                    </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(unique_users[unique_user_count], student_number);</code></div>
<div class="line number66 index65 alt1"><code class="cpp spaces">                    </code><code class="cpp plain">unique_user_count++;</code></div>
<div class="line number67 index66 alt2"><code class="cpp spaces">                </code><code class="cpp plain">}</code></div>
<div class="line number68 index67 alt1"><code class="cpp spaces">            </code><code class="cpp plain">}</code></div>
<div class="line number69 index68 alt2"><code class="cpp spaces">        </code><code class="cpp plain">}</code></div>
<div class="line number70 index69 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number71 index70 alt2"> </div>
<div class="line number72 index71 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Reverse the order of the unique student numbers</code></div>
<div class="line number73 index72 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; unique_user_count / 2; i++) {</code></div>
<div class="line number74 index73 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">char</code> <code class="cpp plain">temp[20];</code></div>
<div class="line number75 index74 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(temp, unique_users[i]);</code></div>
<div class="line number76 index75 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(unique_users[i], unique_users[unique_user_count - 1 - i]);</code></div>
<div class="line number77 index76 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(unique_users[unique_user_count - 1 - i], temp);</code></div>
<div class="line number78 index77 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number79 index78 alt2"> </div>
<div class="line number80 index79 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Print the unique student numbers in reverse order</code></div>
<div class="line number81 index80 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; unique_user_count; i++) {</code></div>
<div class="line number82 index81 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%s\n"</code><code class="cpp plain">, unique_users[i]);</code></div>
<div class="line number83 index82 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number84 index83 alt1"> </div>
<div class="line number85 index84 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Close the CAD file</code></div>
<div class="line number86 index85 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(cad_file);</code></div>
<div class="line number87 index86 alt2"> </div>
<div class="line number88 index87 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number89 index88 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>若採用 Python 編寫:</p>
<p>read_last.py 原始碼</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_257979">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># 讀取學號檔案</code></div>
<div class="line number2 index1 alt1"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"2b_user_list.txt"</code><code class="py plain">, </code><code class="py string">'r'</code><code class="py plain">) as user_file:</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py plain">user_lines </code><code class="py keyword">=</code> <code class="py plain">user_file.read().splitlines()</code></div>
<div class="line number4 index3 alt1"><code class="py spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="py comments"># 讀取 last 指令轉出的檔案, 以 last -w &gt; cad2023_2b_w8.txt 建立檔案</code></div>
<div class="line number6 index5 alt1"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"cad2023_2b_w8.txt"</code><code class="py plain">, </code><code class="py string">'r'</code><code class="py plain">) as cad_file:</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py comments"># 以下是利用跳行符號, 將每一行區隔成數列</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py plain">cad_lines </code><code class="py keyword">=</code> <code class="py plain">cad_file.read().splitlines()</code></div>
<div class="line number9 index8 alt2"><code class="py comments">#print(cad_lines)</code></div>
<div class="line number10 index9 alt1"><code class="py spaces"> </code> </div>
<div class="line number11 index10 alt2"><code class="py comments"># 從 cad_lines 建立所有登入使用者數列</code></div>
<div class="line number12 index11 alt1"><code class="py plain">login_users </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number13 index12 alt2"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py plain">cad_lines:</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py plain">line_list </code><code class="py keyword">=</code> <code class="py plain">i.split(</code><code class="py string">" "</code><code class="py plain">)</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py plain">login_users.append(line_list[</code><code class="py value">0</code><code class="py plain">])</code></div>
<div class="line number16 index15 alt1"><code class="py comments">#print(login_users)</code></div>
<div class="line number17 index16 alt2"><code class="py spaces"> </code> </div>
<div class="line number18 index17 alt1"><code class="py comments"># 根據 https://stackoverflow.com/questions/480214/how-do-i-remove-duplicates-from-a-list-while-preserving-order</code></div>
<div class="line number19 index18 alt2"><code class="py comments"># 數列去除重複元素但仍保持原始次序</code></div>
<div class="line number20 index19 alt1"><code class="py plain">login_users </code><code class="py keyword">=</code> <code class="py functions">list</code><code class="py plain">(</code><code class="py functions">dict</code><code class="py plain">.fromkeys(login_users))</code></div>
<div class="line number21 index20 alt2"><code class="py comments">#print(login_users)</code></div>
<div class="line number22 index21 alt1"><code class="py spaces"> </code> </div>
<div class="line number23 index22 alt2"><code class="py comments"># 建立數列存放符合條件的使用者</code></div>
<div class="line number24 index23 alt1"><code class="py plain">valid_users </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number25 index24 alt2"><code class="py spaces"> </code> </div>
<div class="line number26 index25 alt1"><code class="py comments"># 取出符合條件的使用者</code></div>
<div class="line number27 index26 alt2"><code class="py keyword">for</code> <code class="py plain">line </code><code class="py keyword">in</code> <code class="py plain">login_users:</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py string">"cad"</code> <code class="py keyword">in</code> <code class="py plain">line:</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">        </code><code class="py comments"># 將 cad 字串去除</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">        </code><code class="py plain">user_number </code><code class="py keyword">=</code> <code class="py plain">line.replace(</code><code class="py string">"cad"</code><code class="py plain">, "")</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py plain">user_number </code><code class="py keyword">in</code> <code class="py plain">user_lines:</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">            </code><code class="py plain">valid_users.append(user_number)</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">             </code> </div>
<div class="line number34 index33 alt1"><code class="py comments"># 利用 reverse() 將 valid_users 反向排序</code></div>
<div class="line number35 index34 alt2"><code class="py plain">valid_users.reverse()</code></div>
<div class="line number36 index35 alt1"><code class="py spaces"> </code> </div>
<div class="line number37 index36 alt2"><code class="py comments"># , 最早登入者列在最前面</code></div>
<div class="line number38 index37 alt1"><code class="py keyword">for</code> <code class="py plain">user </code><code class="py keyword">in</code> <code class="py plain">valid_users:</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(user)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h2>w12</h2>
<h3>helloworld</h3>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_110996">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div>
<div class="line number4 index3 alt1"><code class="cpp plain">{</code></div>
<div class="line number5 index4 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"hello world\n"</code><code class="cpp plain">);</code></div>
<div class="line number6 index5 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="355" src="https://41223136.github.io/cp2023/images/helloworld.png" width="600"/></p>
<h3>GD繪圖程式1</h3>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;
 
int main() {
    int width = 800;
    int height = 600;
 
    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);
 
    FILE *outputFile = fopen("hellogd.png", "wb");
    if (outputFile == NULL) {
 
fprintf(stderr, "Error opening the output file.\n");
 
return 1;
    }
    
    int red = gdImageColorAllocate(img, 255, 0, 0);
    int blue = gdImageColorAllocate(img, 0, 0, 255);
    int black = gdImageColorAllocate(img, 0, 0, 0);
    int white = gdImageColorAllocate(img, 255, 255, 255);
    // 長方形塗色
    gdImageFilledRectangle(img, 0, 0, width, height, white);
    gdImageFilledRectangle(img, 0, 0, (int)width/4, (int)height/4, blue);
    // 橢圓形塗色
    gdImageFilledEllipse(img, (int)width*3/4, (int)height/4, (int)width/4, (int)width/4, red);
    // 橢圓形畫線
    gdImageEllipse(img, (int)width*3/4, (int)height*3/4, (int)width/4, (int)width/4, red);
    // 畫直線
    gdImageLine(img, (int)width/2, (int)height/2, (int)width/2, (int)height/2 + 100, blue);
    
    // 多邊形畫線
    gdPoint points[4];
    points[0].x = (int)width/4;
    points[0].y = (int)height*3/4;
    points[1].x = points[0].x + 100;
    points[1].y = points[0].y;
    points[2].x = points[1].x;
    points[2].y = points[1].y + 100;
    points[3].x = points[2].x - 100;
    points[3].y = points[2].y;
    gdImagePolygon(img, points, 4, black);
    
    // 多邊形塗色
    gdPoint points2[4];
    points2[0].x = (int)width/3;
    points2[0].y = (int)height/2;
    points2[1].x = points2[0].x + 100;
    points2[1].y = points2[0].y;
    points2[2].x = points2[1].x;
    points2[2].y = points2[1].y + 100;
    points2[3].x = points2[2].x - 150;
    points2[3].y = points2[2].y;
    gdImageFilledPolygon(img, points2, 4, red);
 
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
    return 0;
}</pre>
<p><img alt="" height="300" src="/images/hellogd.png" width="400"/></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZNZ2_9DTYxLgP8k-6mK7ecBWpTNivviMP5bzt_IXGqKeA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=PXC5Ry"></a></p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_46366">
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;
 
// Declare the rotation function
void rotateFilledPolygon(int x_orig, int y_orig, double rotation_ang, gdPoint *points, int num_points) {
    int i;
    double angle_rad = rotation_ang * M_PI / 180.0;
 
    for (i = 0; i &lt; num_points; i++) {
        int x = points[i].x - x_orig;
        int y = points[i].y - y_orig;
 
        points[i].x = x_orig + (int)(x * cos(angle_rad) - y * sin(angle_rad));
        points[i].y = y_orig + (int)(x * sin(angle_rad) + y * cos(angle_rad));
    }
}
 
int main() {
    int width = 800;
    int height = 600;
 
    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);
 
    FILE *outputFile = fopen("./../images/hellogd2.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
 
    int red = gdImageColorAllocate(img, 255, 0, 0);
    int blue = gdImageColorAllocate(img, 0, 0, 255);
    int black = gdImageColorAllocate(img, 0, 0, 0);
    int white = gdImageColorAllocate(img, 255, 255, 255);
 
    gdImageFilledRectangle(img, 0, 0, width, height, white);
    gdImageFilledRectangle(img, 0, 0, (int)width / 4, (int)height / 4, blue);
 
    gdImageFilledEllipse(img, (int)width * 3 / 4, (int)height / 4, (int)width / 4, (int)width / 4, red);
    gdImageEllipse(img, (int)width * 3 / 4, (int)height * 3 / 4, (int)width / 4, (int)width / 4, red);
    gdImageLine(img, (int)width / 2, (int)height / 2, (int)width / 2, (int)height / 2 + 100, blue);
 
    gdPoint points[4];
    points[0].x = (int)width / 4;
    points[0].y = (int)height * 3 / 4;
    points[1].x = points[0].x + 100;
    points[1].y = points[0].y;
    points[2].x = points[1].x;
    points[2].y = points[1].y + 100;
    points[3].x = points[2].x - 100;
    points[3].y = points[2].y;
 
    // Call the rotation function multiple times
    for (int i = 0; i &lt; 4; i++) {
        rotateFilledPolygon((int)width / 4 + 50, (int)height * 3 / 4 + 50, 30.0, points, 4);
        gdImagePolygon(img, points, 4, black);
    }
 
    gdPoint points2[4];
    points2[0].x = (int)width / 3;
    points2[0].y = (int)height / 2;
    points2[1].x = points2[0].x + 100;
    points2[1].y = points2[0].y;
    points2[2].x = points2[1].x;
    points2[2].y = points2[1].y + 100;
    points2[3].x = points2[2].x - 150;
    points2[3].y = points2[2].y;
 
    // Call the rotation function multiple times
    for (int i = 0; i &lt; 12; i++) {
        //rotateFilledPolygon((int)width / 3 + 50, (int)height / 2 + 50, 30.0, points2, 4);
        rotateFilledPolygon(500, 200, 30.0, points2, 4);
        gdImageFilledPolygon(img, points2, 4, red);
    }
 
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
 
    return 0;
}</pre>
<p><img alt="" height="300" src="/images/hellogd2.png" width="400"/></p>
</div>
</div>
<h2>W13</h2>
<p><span>  在計算機程式課程中，我獲得了豐富的學習經驗。</span><wbr/><span>這門課程深入介紹了程式設計的基本概念和實際應用，</span><wbr/><span>讓我計算機程式有了更深刻的理解。</span></p>
<p><span>  首先，課程強調了程式語言的重要性，我學到了多種語言，</span><wbr/><span>包括Python與C++。這不僅擴大了我的對程式設計視野，</span><wbr/><span>還讓我能夠更靈活地應對不同的問題和場景。在每個語言中，</span><wbr/><span>我學會了許多撰寫程式</span><span>的基本技能。 </span></p>
<p><span>  其次，</span><span> 在小組合作中，我與同學們分享了想法，</span><wbr/><span>討論了不同的解決方案。這種合作氛圍拓寬了我的思維，</span><wbr/><span>讓我從不同的角度看待問題，也提高了我的團隊合作和溝通能力。</span></p>
<p><span>  綜上所述，計算機程式課程不僅豐富了我的專業知識，</span><wbr/><span>還培養了我的邏輯思維和解難能力。這門課程不僅是我的學術收獲，</span><wbr/><span>更是我在程式設計領域邁出重要的一步。</span><wbr/><span>我期待將這些學到的技能應用到未來的項目中，</span><wbr/><span>並持續追求在程式設計領域的進一步成長。</span></p>
<h2>w15</h2>
<p><img caption="false" height="315" src="/images/w15.png" width="600"/></p>
<h1>NOTE</h1>
<h2>ssh</h2>
<p>下載putty</p>
<p>在putty資料夾內開啟puttygen.exe做一把金鑰匙</p>
<p>將key儲存在github帳號內(開啟設定點選ssh)</p>
<p>回到puttygen.exe按save private key即可</p>
<p>接著再開啟putty</p>
<p>Host Name輸入github.com</p>
<p>Saved Sessions輸入自己的學號</p>
<p><img alt="" height="395" src="https://41223136.github.io/cp2023/images/putty.png" width="400"/></p>
<p>點選proxy改設定</p>
<p><img alt="" height="402" src="https://41223136.github.io/cp2023/images/putty1.png" width="400"/></p>
<p>再點選ssh內的Auth裡面Credentials</p>
<p><img alt="" height="395" src="https://41223136.github.io/cp2023/images/putty2.png" width="400"/></p>
<p>再匯出即可</p>
<h2>puttygen</h2>
<p>使用puttygen.exe定位主機位置獲得key(點Generate)</p>
<p><img alt="" height="288" src="https://41223136.github.io/cp2023/images/puttygen.png" width="400"/></p>
<p>點選之後並在視窗內移動</p>
<p><img alt="" height="288" src="https://41223136.github.io/cp2023/images/puttygen1.png" width="400"/></p>
<p>複製ssh-rsa的內容<span>全部</span></p>
<p>再到github帳號setting的ssh and gpg keys新增一把key</p>
<p>把剛剛複製的key-rsa貼上之後點save private key 即可!</p>
<p>儲存到<span>tinyc-data-home<span> </span></span>名稱:學號</p>
<p>將鑰匙儲存在自己的USB當中</p>
<h1>國旗練習</h1>
<h2>Thai</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

#define WIDTH 600
#define HEIGHT 400

void drawThaiFlag(gdImagePtr im) {
    int white = gdImageColorAllocate(im, 255, 255, 255);
    int indigo = gdImageColorAllocate(im, 46, 49, 146);  // 較深的靛藍色
    int red = gdImageColorAllocate(im, 255, 0, 0);

    // Draw white background
    gdImageFilledRectangle(im, 0, 0, WIDTH, HEIGHT, white);

    // Calculate stripe heights based on the specified ratio
    int totalStripes = 5;
    int stripeHeights[5] = {1, 1, 2, 1, 1};
    int totalHeight = 0;
    for (int i = 0; i &lt; totalStripes; ++i) {
        totalHeight += stripeHeights[i];
    }

    // Draw stripes
    int startY = 0;
    for (int i = 0; i &lt; totalStripes; ++i) {
        int stripeHeight = stripeHeights[i] * HEIGHT / totalHeight;
        switch (i % 5) {
            case 0: // Red stripe
                gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, red);
                break;
            case 1: // White stripe
                gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, white);
                break;
            case 2: // Indigo stripe (靛藍色)
                gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, indigo);
                break;
            case 3: // White stripe
                gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, white);
                break;
            case 4: // Red stripe
                gdImageFilledRectangle(im, 0, startY, WIDTH, startY + stripeHeight, red);
                break;
        }
        startY += stripeHeight;
    }
}

int main() {
    gdImagePtr im;
    FILE *outputFile;

    // Create a new image with specified width and height
    im = gdImageCreate(WIDTH, HEIGHT);

    // Draw the Thai flag on the image
    drawThaiFlag(im);

    // Open a file for writing
    outputFile = fopen("thai_flag.png", "wb");

    // Write the image to the file in PNG format
    gdImagePng(im, outputFile);

    // Close the file
    fclose(outputFile);

    // Free the memory used for the image
    gdImageDestroy(im);

    return 0;
}
</pre>
<p><img alt="" height="280" src="/images/thai_flag.png" width="420"/></p>
<h2>Laos</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

#define WIDTH 600
#define HEIGHT 400
#define RED 0xCE1126    // Red color
#define WHITE 0xFFFFFF  // White color
#define BLUE 0x0033A0   // Blue color

void drawLaosFlag() {
    gdImagePtr im;
    FILE *output;

    im = gdImageCreateTrueColor(WIDTH, HEIGHT);
    output = fopen("laos_flag.png", "wb");

    // Draw red background
    gdImageFilledRectangle(im, 0, 0, WIDTH - 1, HEIGHT - 1, RED);

    // Draw blue rectangle (symbolizing the Mekong River)
    int blueRectWidth = WIDTH;
    int blueRectHeight = HEIGHT / 2;  // Increase the height
    int blueRectX = 0;
    int blueRectY = HEIGHT / 2 - blueRectHeight / 2;

    gdImageFilledRectangle(im, blueRectX, blueRectY, blueRectX + blueRectWidth, blueRectY + blueRectHeight, BLUE);

    // Draw white circle
    int centerX = WIDTH / 2;
    int centerY = HEIGHT / 2;
    int circleRadius = HEIGHT / 8;  // Adjusted radius

    gdImageFilledEllipse(im, centerX, centerY, circleRadius * 2, circleRadius * 2, WHITE);

    gdImagePng(im, output);
    fclose(output);
    gdImageDestroy(im);
}

int main() {
    drawLaosFlag();
    return 0;
}</pre>
<p><br/><img alt="" height="280" src="/images/laos_flag.png" width="420"/></p>
<h2>Bangladesh</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

#define WIDTH 600
#define HEIGHT 400
#define GREEN 0x138808  // Green color
#define RED 0xE30A17     // Red color

void drawBangladeshFlag() {
    gdImagePtr im;
    FILE *output;

    im = gdImageCreateTrueColor(WIDTH, HEIGHT);
    output = fopen("bangladesh_flag.png", "wb");

    // Draw green background
    gdImageFilledRectangle(im, 0, 0, WIDTH - 1, HEIGHT - 1, GREEN);

    // Draw red circle
    int centerX = WIDTH / 2;
    int centerY = HEIGHT / 2;
    int circleRadius = 100;

    gdImageFilledEllipse(im, centerX, centerY, circleRadius * 2, circleRadius * 2, RED);

    gdImagePng(im, output);
    fclose(output);
    gdImageDestroy(im);
}

int main() {
    drawBangladeshFlag();
    return 0;
}</pre>
<p><img alt="" height="280" src="/images/bangladesh_flag.png" width="420"/></p>
<h2>vietnam</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

#define WIDTH 600
#define HEIGHT 400
#define RED 0xDC143C  // Crimson color
#define YELLOW 0xFFFF00

void drawStar(gdImagePtr im, int x, int y, int outerRadius, int innerRadius, int color) {
    double angle = -M_PI / 2.0;  // Starting angle for the star

    gdPoint starPoints[10];

    for (int i = 0; i &lt; 10; i++) {
        int radius = i % 2 == 0 ? outerRadius : innerRadius;
        starPoints[i].x = x + radius * cos(angle);
        starPoints[i].y = y + radius * sin(angle);
        angle += M_PI / 5.0;  // Angle between two consecutive points
    }

    gdImageFilledPolygon(im, starPoints, 10, color);
}

void drawVietnamFlag() {
    gdImagePtr im;
    FILE *output;

    im = gdImageCreateTrueColor(WIDTH, HEIGHT);
    output = fopen("./../images/vietnam_flag.png", "wb");

    // Draw red background
    gdImageFilledRectangle(im, 0, 0, WIDTH - 1, HEIGHT - 1, RED);

    // Draw yellow star in the center
    int starSize = 60;
    int starX = WIDTH / 2;
    int starY = HEIGHT / 2;

    drawStar(im, starX, starY, starSize, starSize / 2, YELLOW);

    gdImagePng(im, output);
    fclose(output);
    gdImageDestroy(im);
}

int main() {
    drawVietnamFlag();
    return 0;
}
</pre>
<p><img alt="" height="280" src="/images/vietnam_flag.png" width="420"/></p>
<h2>Italian</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;

int main() {
    int width = 300;  // 宽度
    int height = 200; // 高度

    gdImagePtr image = gdImageCreateTrueColor(width, height);

    if (image == NULL) {
        printf("Failed to create image.\n");
        return 1;
    }

    // 确定颜色索引
    int green = gdImageColorAllocate(image, 0, 128, 0);
    int white = gdImageColorAllocate(image, 255, 255, 255);
    int red = gdImageColorAllocate(image, 255, 0, 0);

    // 填充颜色
    gdImageFilledRectangle(image, 0, 0, width / 3, height, green);
    gdImageFilledRectangle(image, width / 3, 0, (width / 3) * 2, height, white);
    gdImageFilledRectangle(image, (width / 3) * 2, 0, width, height, red);

    FILE *outputFile;
    outputFile = fopen("./../images/italian_flag.png", "wb");

    if (outputFile == NULL) {
        printf("Failed to open file for writing.\n");
        return 1;
    }

    gdImagePng(image, outputFile);
    fclose(outputFile);

    gdImageDestroy(image);

    return 0;
}</pre>
<p><img alt="" height="280" src="/images/italian_flag.png" width="420"/></p>
<h1>課程評分</h1>
<p><span>課程評分</span>:</p>
<p>線上測驗、個人期望成績<span>、</span>期中網站與簡報、期末網站與簡報.</p>
<p><span>線上測驗</span>:</p>
<p>建立帳號後 (<span>請將密碼寫入手機的備忘錄</span>), 每週不定時進行.</p>
<p><span>期中網站評分與簡報</span>:</p>
<p>期中考前兩週開始進行.</p>
<p><span>期末網站評分與簡報</span>:</p>
<p>期末考前兩週開始進行.</p>
<p><span>期中成績計算</span>:</p>
<p>期中考與之前各週線上測驗成績平均</p>
<p><span>學期成績計算</span>:</p>
<p><span>(期中成績與之後各週線上測驗成績平均)*60%+(期中網站與簡報成績)*20%+(期末網站與簡報成績)*20%</span></p>
<p><span>(課後需要花許多時間練習)</span></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p></p>
<p></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input type="submit" value="Save"/></form>
<p></p>
<p></p>
<p></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button>Reload</button></p>
<p></p>
<p></p>
<p></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p></p>
<div id="brython_div1"></div>
<hr/>
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p></p>
<p></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input type="submit" value="Save"/></form>
<p></p>
<p></p>
<p></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button>Reload</button></p>
<p></p>
<p></p>
<p></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p></p>
<div id="brython_div2"></div>
<h1>setup</h1>
<p>利用隨身碟中的批次檔案, 設定所需的網路環境.</p>
<p><a href="https://mde.tw/cpnote/downloads/cadlab_network_setup.7z">cadlab_network_setup.7z</a></p>
<p>納入個別學員所分配到的 IPv6 固定網址設定:<span> </span><a href="https://mde.tw/cpnote/downloads/2023_fall_cadlab_network_setup.7z">2023_fall_cadlab_network_setup.7z</a></p>
<p>1_network_setup.bat (需要管理者身分執行, 才能關閉 IPv4 網路, 啟動 IPv6 網路)</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_688820">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">echo "disable ipv4 and setup proxy for ipv6"</code></div>
<div class="line number2 index1 alt1"><code class="html plain">SET CurrentDir=%~dp0</code></div>
<div class="line number3 index2 alt2"><code class="html plain">%windir%\system32\reg.exe import %CurrentDir%1_2023_cadlab_network_setup.reg</code></div>
<div class="line number4 index3 alt1"><code class="html plain">powershell -executionpolicy bypass -File %CurrentDir%1_disable_ipv4.ps1</code></div>
<div class="line number5 index4 alt2"><code class="html plain">rem mstsc /admin /v:your_server</code></div>
<div class="line number6 index5 alt1"><code class="html plain">exit</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>其中包含以下兩個設定檔案:</p>
<p>1_2023_cadlab_network_setup.reg 用於關閉自動 Proxy 搜尋, 開啟手動設定 Proxy server.</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_955724">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">Windows Registry Editor Version 5.00</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="js spaces"> </code><code class="js plain">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings]</code></div>
<div class="line number4 index3 alt1"><code class="js spaces"> </code><code class="js plain">; disable AutoDetect</code></div>
<div class="line number5 index4 alt2"><code class="js string">"AutoDetect"</code><code class="js plain">=dword:00000000</code></div>
<div class="line number6 index5 alt1"><code class="js string">"MigrateProxy"</code><code class="js plain">=dword:00000001</code></div>
<div class="line number7 index6 alt2"><code class="js plain">; enable Proxy</code></div>
<div class="line number8 index7 alt1"><code class="js string">"ProxyEnable"</code><code class="js plain">=dword:00000001 </code></div>
<div class="line number9 index8 alt2"><code class="js string">"ProxyHttp1.1"</code><code class="js plain">=dword:00000000 </code></div>
<div class="line number10 index9 alt1"><code class="js string">"ProxyServer"</code><code class="js plain">=</code><code class="js string">"http://[2001:288:6004:17::4]:3128"</code></div>
<div class="line number11 index10 alt2"><code class="js string">"ProxyOverride"</code><code class="js plain">=</code><code class="js string">"localhost;192.168.1.0/24;&lt;local&gt;"</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>1_disable_ipv4.ps1 用於關閉 IPv4 網路協定, 開啟 IPv6 網路協定.</p>
<p>對 ChatGPT 提問:</p>
<p>powershell "Disable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip<br/>Enable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip6"可以關閉 IPv4 網路, 開啟 IPv6, 如何同時設定 IPv6 所使用的兩台 DNS servers?</p>
<p>原先設定:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_958848">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">Disable-NetAdapterBinding -Name </code><code class="js string">"*"</code> <code class="js plain">-ComponentID ms_tcpip</code></div>
<div class="line number2 index1 alt1"><code class="js plain">Enable-NetAdapterBinding -Name </code><code class="js string">"*"</code> <code class="js plain">-ComponentID ms_tcpip6</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>修改後的 1_disable_ipv4.ps1 Powershell 設定檔案:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_566180">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor"># 關閉 IPv4 網路</code></div>
<div class="line number2 index1 alt1"><code class="js plain">Disable-NetAdapterBinding -Name </code><code class="js string">"*"</code> <code class="js plain">-ComponentID ms_tcpip</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="js preprocessor"># 啟用 IPv6 網路</code></div>
<div class="line number5 index4 alt2"><code class="js plain">Enable-NetAdapterBinding -Name </code><code class="js string">"*"</code> <code class="js plain">-ComponentID ms_tcpip6</code></div>
<div class="line number6 index5 alt1"> </div>
<div class="line number7 index6 alt2"><code class="js preprocessor"># 設置 IPv6 網路中的兩個 DNS 伺服器 (hinet)</code></div>
<div class="line number8 index7 alt1"><code class="js plain">$dnsServers = </code><code class="js string">"2001:b000:168::1"</code><code class="js plain">, </code><code class="js string">"2001:b000:168::2"</code></div>
<div class="line number9 index8 alt2"><code class="js plain">Set-DnsClientServerAddress -InterfaceAlias </code><code class="js string">"*"</code> <code class="js plain">-ServerAddresses $dnsServers</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>對 ChatGPT 提問:</p>
<p>the following powershell script can setup windows network connection "# 關閉 IPv4 網路<br/>Disable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip<br/> <br/># 啟用 IPv6 網路<br/>Enable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip6<br/> <br/># 設置 IPv6 網路中的兩個 DNS 伺服器 (hinet)<br/>$dnsServers = "2001:b000:168::1", "2001:b000:168::2"<br/>Set-DnsClientServerAddress -InterfaceAlias "*" -ServerAddresses $dnsServers" what if the ipv6 address need set to 2001:288:6004:17:1234::1234 and subnet prefix as 64 and ipv6 gateway as 2001:288:6004:17::254</p>
<p>可以得到下列回應答案:</p>
<p>加上個別學員所分配到的 IPv6 固定網址設定後的 1_disable_ipv4.ps1 Powershell 設定檔案 (必須自行更改固定 Ipv6 位址):</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_3087">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr style="height: 441.675px;">
<td class="gutter" style="height: 441.675px;">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
</td>
<td class="code" style="height: 441.675px;">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor"># 關閉 IPv4 網路</code></div>
<div class="line number2 index1 alt1"><code class="js plain">Disable-NetAdapterBinding -Name </code><code class="js string">"*"</code> <code class="js plain">-ComponentID ms_tcpip</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">  </code> </div>
<div class="line number4 index3 alt1"><code class="js preprocessor"># 啟用 IPv6 網路</code></div>
<div class="line number5 index4 alt2"><code class="js plain">Enable-NetAdapterBinding -Name </code><code class="js string">"*"</code> <code class="js plain">-ComponentID ms_tcpip6</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">  </code> </div>
<div class="line number7 index6 alt2"><code class="js preprocessor"># 設置 IPv6 網路中的兩個 DNS 伺服器 (hinet)</code></div>
<div class="line number8 index7 alt1"><code class="js plain">$dnsServers = </code><code class="js string">"2001:b000:168::1"</code><code class="js plain">, </code><code class="js string">"2001:b000:168::2"</code></div>
<div class="line number9 index8 alt2"><code class="js plain">Set-DnsClientServerAddress -InterfaceAlias </code><code class="js string">"*"</code> <code class="js plain">-ServerAddresses $dnsServers</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"> </div>
<div class="line number12 index11 alt1"><code class="js preprocessor"># 設定 IPv6 固定位址 (fixed address), 子網路首碼長度 (subnet prefix) 與網路預設閘道 (gateway) 等三個變數</code></div>
<div class="line number13 index12 alt2"><code class="js plain">$ipv6Address = </code><code class="js string">"2001:288:6004:17:請使用個人所分配到的 IPv6 位址"</code></div>
<div class="line number14 index13 alt1"><code class="js plain">$subnetPrefixLength = 64</code></div>
<div class="line number15 index14 alt2"><code class="js plain">$gateway = </code><code class="js string">"2001:288:6004:17::254"</code></div>
<div class="line number16 index15 alt1"><code class="js spaces"> </code> </div>
<div class="line number17 index16 alt2"><code class="js preprocessor"># 參考 https://serverfault.com/questions/427234/getting-network-interface-device-name-in-powershell</code></div>
<div class="line number18 index17 alt1"><code class="js plain">$query = </code><code class="js string">"SELECT * FROM Win32_NetworkAdapter WHERE Manufacturer != 'Microsoft' AND NOT PNPDeviceID LIKE 'ROOT\\%'"</code></div>
<div class="line number19 index18 alt2"><code class="js plain">$interfaces = Get-WmiObject -Query $query | Sort index</code></div>
<div class="line number20 index19 alt1"><code class="js plain">$interfaces | ForEach{</code></div>
<div class="line number21 index20 alt2"><code class="js spaces">    </code><code class="js plain">$friendlyname = $_ | ForEach-Object { $_.NetConnectionID }</code></div>
<div class="line number22 index21 alt1"><code class="js spaces">    </code><code class="js plain">New-NetIPAddress -AddressFamily </code><code class="js string">"IPv6"</code> <code class="js plain">-InterfaceAlias $friendlyname -IPAddress $ipv6Address -PrefixLength $subnetPrefixLength -DefaultGateway $gateway</code></div>
<div class="line number23 index22 alt2"><code class="js plain">}</code></div>
<div class="line number24 index23 alt1"> </div>
<div class="line number25 index24 alt2"><code class="js spaces"> </code> </div>
<div class="line number26 index25 alt1"><code class="js preprocessor"># 列出所使用的 IPv6 網路通訊協定內容</code></div>
<div class="line number27 index26 alt2"><code class="js plain">Write-Host </code><code class="js string">"IPv6 Address: $ipv6Address/$subnetPrefixLength"</code></div>
<div class="line number28 index27 alt1"><code class="js plain">Write-Host </code><code class="js string">"IPv6 Gateway: $gateway"</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>下載<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Eck0KdLe1uZEk_LJ2tkEf4ABZyW32cmq5WZVl52Fww9C2A?e=i5Dm3t">2023_fall_w7_cadlab_network_setup.7z</a> <span>(需要下載密碼), 必須先放入個人所分配到的 IPv6 位址後, 以管理者身分執行批次檔案, 就能直接完成電腦輔助設計室中電腦的網路連線設定.</span></p>
<p><span>各學員所分配的固定 IPv6 位址如下:</span></p>
<p>1a 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cba::<a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/593a8e462e0d8e7996f0bca3dd922adfdd4962e0/generate_cp2023_1a_site_repo.py">班級名單序號</a></p>
<p><span>2b 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cbb::</span><a href="https://mde.tw/cpnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/593a8e462e0d8e7996f0bca3dd922adfdd4962e0/generate_cp2023_1b_site_repo.py">班級名單序號</a></p>
<h1>C_lib</h1>
<p>本課程針對 C 程式語言的教學將使用下列程式庫:</p>
<p>gnuplot:<span> </span><a href="https://github.com/gnuplot/gnuplot">https://github.com/gnuplot/gnuplot</a></p>
<p><span>數值分析繪圖程式庫</span><span> </span>- 在機電設計流程中, 工程師運用數值分析法進行設計與模擬運算後, 將數據存檔, 可利用 gnuplot 繪圖指令, 以令人容易理解的圖形呈現數值分析結果.</p>
<p>範例:</p>
<p><a href="https://mde.tw/cpnote/downloads/euler_gnuplot_msd_ex1.c">euler_gnuplot_msd_ex1.c</a></p>
<p>執行結果:</p>
<p><img alt="" height="200" src="https://mde.tw/cpnote/images/motion_plot.png" width="400"/></p>
<p></p>
<hr/>
<p>gd:<span> </span><a href="https://github.com/libgd/libgd">https://github.com/libgd/libgd</a></p>
<p>泛用繪圖程式庫 - 工程師在產品開發或製造程序中, 可利用線條(例如: 特殊齒輪外型)、字串(例如: 製造日期或保固訊息)或塗色區域(特定標誌、二維條碼或 QRCode)進行一般標誌或圖像繪圖.</p>
<p>範例:</p>
<p><a href="https://mde.tw/cpnote/downloads/gd_ex1.c">gd_ex1.c</a></p>
<p>執行結果:</p>
<p><img alt="" height="200" src="https://mde.tw/cpnote/images/gd_ex1.png" width="200"/><span> </span>gd_ex1.png</p>
<p><img alt="" height="200" src="https://mde.tw/cpnote/images/gd_ex1.jpg" width="200"/><span> </span>gd_ex1.jpg</p>
<hr/>
<p>raylib:<span> </span><a href="https://github.com/raysan5/raylib">https://github.com/raysan5/raylib</a></p>
<p>raygui:<span> </span><a href="https://github.com/raysan5/raygui">https://github.com/raysan5/raygui</a></p>
<p><a href="https://www.raylib.com/cheatsheet/raylib_cheatsheet_v4.0.pdf">https://www.raylib.com/cheatsheet/raylib_cheatsheet_v4.0.pdf</a></p>
<p>電玩程式庫 - 工程師可將機電流程中與產品設計或製造程序有關的系統, 透過與使用者互動呈現逼真的模擬過程或結果, 也可用來開發與機電系統有關的虛擬整合套件(例如: 透過與實體感測器或影像辨識系統結合, 將實時運動競賽中的運動員動作與虛擬實境或擴增實境系統結合), 也可用來<a href="https://itch.io/games/made-with-raylib">開發電動遊戲</a>(<a href="https://github.com/raysan5/raylib-games">raylib-games</a>).</p>
<p>下載<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EX_rMe3i3pZCre5j6UaLxPQB3WchJTfnd1v1KtaJ32dQ_w?e=Qmd9HT">Tiny C Compiler with gd and raylib 程式庫.7z</a><span> </span>(需要下載密碼)</p>
<p>範例:</p>
<p><a href="https://mde.tw/cpnote/downloads/move_red_dot.c">move_red_dot.c</a></p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_991419">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp comments">/*******************************************************************************************</code></div>
<div class="line number2 index1 alt1"><code class="cpp comments">*</code></div>
<div class="line number3 index2 alt2"><code class="cpp comments">*   raylib [core] example - Keyboard input</code></div>
<div class="line number4 index3 alt1"><code class="cpp comments">*</code></div>
<div class="line number5 index4 alt2"><code class="cpp comments">*   Example originally created with raylib 1.0, last time updated with raylib 1.0</code></div>
<div class="line number6 index5 alt1"><code class="cpp comments">*</code></div>
<div class="line number7 index6 alt2"><code class="cpp comments">*   Example licensed under an unmodified zlib/libpng license, which is an OSI-certified,</code></div>
<div class="line number8 index7 alt1"><code class="cpp comments">*   BSD-like license that allows static linking with closed source software</code></div>
<div class="line number9 index8 alt2"><code class="cpp comments">*</code></div>
<div class="line number10 index9 alt1"><code class="cpp comments">*   Copyright (c) 2014-2023 Ramon Santamaria (@raysan5)</code></div>
<div class="line number11 index10 alt2"><code class="cpp comments">*</code></div>
<div class="line number12 index11 alt1"><code class="cpp comments">********************************************************************************************/</code></div>
<div class="line number13 index12 alt2"><code class="cpp comments">// move_red_dot.c</code></div>
<div class="line number14 index13 alt1"><code class="cpp comments">/* on Replit, add pkgs.raylib to replit.nix</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">   </code><code class="cpp comments">use cc move_red_dot.c -lraylib to compile and link</code></div>
<div class="line number16 index15 alt1"><code class="cpp comments">use ./a.out to execute and move the red dot with arrow keys</code></div>
<div class="line number17 index16 alt2"><code class="cpp comments">*/</code></div>
<div class="line number18 index17 alt1"><code class="cpp comments">// on Portable system, use cc=tcc.exe -run -lgd -lraylib to run</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="cpp preprocessor">#include "raylib.h"</code></div>
<div class="line number21 index20 alt2"> </div>
<div class="line number22 index21 alt1"><code class="cpp comments">//------------------------------------------------------------------------------------</code></div>
<div class="line number23 index22 alt2"><code class="cpp comments">// Program main entry point</code></div>
<div class="line number24 index23 alt1"><code class="cpp comments">//------------------------------------------------------------------------------------</code></div>
<div class="line number25 index24 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main(</code><code class="cpp keyword bold">void</code><code class="cpp plain">)</code></div>
<div class="line number26 index25 alt1"><code class="cpp plain">{</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Initialization</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp comments">//--------------------------------------------------------------------------------------</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">const</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">screenWidth = 800;</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">const</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">screenHeight = 450;</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp plain">InitWindow(screenWidth, screenHeight, </code><code class="cpp string">"raylib [core] example - keyboard input"</code><code class="cpp plain">);</code></div>
<div class="line number33 index32 alt2"> </div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp plain">Vector2 ballPosition = { (</code><code class="cpp color1 bold">float</code><code class="cpp plain">)screenWidth/2, (</code><code class="cpp color1 bold">float</code><code class="cpp plain">)screenHeight/2 };</code></div>
<div class="line number35 index34 alt2"> </div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp plain">SetTargetFPS(60);               </code><code class="cpp comments">// Set our game to run at 60 frames-per-second</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp comments">//--------------------------------------------------------------------------------------</code></div>
<div class="line number38 index37 alt1"> </div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Main game loop</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">while</code> <code class="cpp plain">(!WindowShouldClose())    </code><code class="cpp comments">// Detect window close button or ESC key</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp plain">{</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">        </code><code class="cpp comments">// Update</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">        </code><code class="cpp comments">//----------------------------------------------------------------------------------</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(IsKeyDown(KEY_RIGHT)) ballPosition.x += 2.0f;</code></div>
<div class="line number45 index44 alt2"><code class="cpp spaces">        </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(IsKeyDown(KEY_LEFT)) ballPosition.x -= 2.0f;</code></div>
<div class="line number46 index45 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(IsKeyDown(KEY_UP)) ballPosition.y -= 2.0f;</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">        </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(IsKeyDown(KEY_DOWN)) ballPosition.y += 2.0f;</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">        </code><code class="cpp comments">//----------------------------------------------------------------------------------</code></div>
<div class="line number49 index48 alt2"> </div>
<div class="line number50 index49 alt1"><code class="cpp spaces">        </code><code class="cpp comments">// Draw</code></div>
<div class="line number51 index50 alt2"><code class="cpp spaces">        </code><code class="cpp comments">//----------------------------------------------------------------------------------</code></div>
<div class="line number52 index51 alt1"><code class="cpp spaces">        </code><code class="cpp plain">BeginDrawing();</code></div>
<div class="line number53 index52 alt2"> </div>
<div class="line number54 index53 alt1"><code class="cpp spaces">            </code><code class="cpp plain">ClearBackground(RAYWHITE);</code></div>
<div class="line number55 index54 alt2"> </div>
<div class="line number56 index55 alt1"><code class="cpp spaces">            </code><code class="cpp plain">DrawText(</code><code class="cpp string">"move the ball with arrow keys"</code><code class="cpp plain">, 10, 10, 20, DARKGRAY);</code></div>
<div class="line number57 index56 alt2"> </div>
<div class="line number58 index57 alt1"><code class="cpp spaces">            </code><code class="cpp plain">DrawCircleV(ballPosition, 50, MAROON);</code></div>
<div class="line number59 index58 alt2"> </div>
<div class="line number60 index59 alt1"><code class="cpp spaces">        </code><code class="cpp plain">EndDrawing();</code></div>
<div class="line number61 index60 alt2"><code class="cpp spaces">        </code><code class="cpp comments">//----------------------------------------------------------------------------------</code></div>
<div class="line number62 index61 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number63 index62 alt2"> </div>
<div class="line number64 index63 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// De-Initialization</code></div>
<div class="line number65 index64 alt2"><code class="cpp spaces">    </code><code class="cpp comments">//--------------------------------------------------------------------------------------</code></div>
<div class="line number66 index65 alt1"><code class="cpp spaces">    </code><code class="cpp plain">CloseWindow();        </code><code class="cpp comments">// Close window and OpenGL context</code></div>
<div class="line number67 index66 alt2"><code class="cpp spaces">    </code><code class="cpp comments">//--------------------------------------------------------------------------------------</code></div>
<div class="line number68 index67 alt1"> </div>
<div class="line number69 index68 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number70 index69 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>在 Replit 與近端程式環境執行結果:</p>
<p>啟動後以鍵盤方向鍵上下左右控制紅點.</p>
<p><img alt="" height="236" src="https://mde.tw/cpnote/images/raylib_move_red_dot_with_arrow_keys.gif" width="400"/></p>
<h1>replit</h1>
<p><a href="https://docs.replit.com/">https://docs.replit.com/</a></p>
<p>w8: 為了強化保全, Replit 目前只能透過 Gmail 或 Github 帳號登入, 無法直接利用帳號與密碼登入.</p>
<p>請注意: 原本 Replit Python 3.8 虛擬環境的目錄為 venv, 但是 Python 3.10 虛擬環境的目錄已經改用 .pythonlibs, 因此倉儲若不希望帶著此一虛擬環境檔案, 則可以將 .pythonlibs 附加到 .gitignore</p>
<p>另外在近端必須處理 Python 3.12.0 版本中的 <a href="https://docs.python.org/3/library/ssl.html">https://docs.python.org/3/library/ssl.html</a> </p>
<div>
<div class="syntaxhighlighter py" id="highlighter_301586">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">httpd.socket </code><code class="py keyword">=</code> <code class="py plain">ssl.wrap_socket(httpd.socket,</code></div>
<div class="line number2 index1 alt1"><code class="py spaces">                   </code><code class="py plain">^^^^^^^^^^^^^^^</code></div>
<div class="line number3 index2 alt2"><code class="py plain">AttributeError: module </code><code class="py string">'ssl'</code> <code class="py plain">has no attribute </code><code class="py string">'wrap_socket'</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>將 GitHub cmsimde 倉儲導入 Replit 的方法, 請參考 <a href="https://mde.tw/cadnote/content/Replit.html">https://mde.tw/cadnote/content/Replit.html</a> 中的說明.</p>
<p>備註：建立 yengm (at gm.nfu) 帳號, for Replit<span> </span><a href="https://replit.com/site/teams-for-education">Teams for Education</a>.</p>
<p>在 Replit C 程式環境中額外納入 gnuplot 套件的 replit.nix 設定:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_359452">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">{ pkgs }: {</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">    </code><code class="js plain">deps = [</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">        </code><code class="js plain">pkgs.sudo</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">        </code><code class="js plain">pkgs.clang_12</code></div>
<div class="line number5 index4 alt2"><code class="js spaces">        </code><code class="js plain">pkgs.ccls</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">        </code><code class="js plain">pkgs.gdb</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">        </code><code class="js plain">pkgs.gnumake</code></div>
<div class="line number8 index7 alt1"><code class="js spaces">        </code><code class="js plain">pkgs.gnuplot</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js plain">];</code></div>
<div class="line number10 index9 alt1"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>C with gnuplot:</p>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_407082">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number4 index3 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Open a file to write displacement and velocity data</code></div>
<div class="line number5 index4 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"motion_data.txt"</code><code class="cpp plain">, </code><code class="cpp string">"w"</code><code class="cpp plain">);</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!outputFile) {</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Failed to create data file.\n"</code><code class="cpp plain">);</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Simulate motion for 10 seconds and calculate displacement and velocity, while writing data to the file</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">x = 0.2;  </code><code class="cpp comments">// Initial displacement</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">v = 0.0;  </code><code class="cpp comments">// Initial velocity</code></div>
<div class="line number14 index13 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">dt = 0.01; </code><code class="cpp comments">// Time step</code></div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">t = 0.0;  </code><code class="cpp comments">// Time</code></div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">while</code> <code class="cpp plain">(t &lt;= 10.0) {</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">double</code> <code class="cpp plain">acceleration = (-10.0 * x - 0.5 * v) / 1.0; </code><code class="cpp comments">// Modified system parameters here</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">        </code><code class="cpp plain">v += acceleration * dt;</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">        </code><code class="cpp plain">x += v * dt;</code></div>
<div class="line number21 index20 alt2"> </div>
<div class="line number22 index21 alt1"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(outputFile, </code><code class="cpp string">"%lf %lf %lf\n"</code><code class="cpp plain">, t, x, v);</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="cpp spaces">        </code><code class="cpp plain">t += dt;</code></div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number26 index25 alt1"> </div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Close the data file</code></div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number29 index28 alt2"> </div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Start a Gnuplot process using popen</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*gnuplotPipe = popen(</code><code class="cpp string">"gnuplot -persistent"</code><code class="cpp plain">, </code><code class="cpp string">"w"</code><code class="cpp plain">);</code></div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!gnuplotPipe) {</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(stderr, </code><code class="cpp string">"Failed to start Gnuplot.\n"</code><code class="cpp plain">);</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Use Gnuplot plotting commands, specify font and output as PNG</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set terminal pngcairo enhanced font 'default,10' size 800,400\n"</code><code class="cpp plain">);</code></div>
<div class="line number39 index38 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set output 'motion_plot.png'\n"</code><code class="cpp plain">);</code></div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set title 'Displacement and Velocity vs. Time'\n"</code><code class="cpp plain">);</code></div>
<div class="line number41 index40 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set xlabel 'Time (s)'\n"</code><code class="cpp plain">);</code></div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"set ylabel 'Displacement (m)'\n"</code><code class="cpp plain">);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, "plot </code><code class="cpp string">'motion_data.txt'</code> <code class="cpp keyword bold">using</code> <code class="cpp plain">1:2 with lines lw 2 title </code><code class="cpp string">'Displacement'</code><code class="cpp plain">, \</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">                             </code><code class="cpp string">'motion_data.txt'</code> <code class="cpp keyword bold">using</code> <code class="cpp plain">1:3 with lines lw 2 title </code><code class="cpp string">'Velocity'</code><code class="cpp plain">\n");</code></div>
<div class="line number45 index44 alt2"> </div>
<div class="line number46 index45 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Close the Gnuplot process</code></div>
<div class="line number47 index46 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fprintf</code><code class="cpp plain">(gnuplotPipe, </code><code class="cpp string">"exit\n"</code><code class="cpp plain">);</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp plain">pclose(gnuplotPipe);</code></div>
<div class="line number49 index48 alt2"> </div>
<div class="line number50 index49 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number51 index50 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>在選擇 Python 作為 Language 的 repl 專案中, cc 已經內建, 若要加裝 gnuplot 套件則可在 replit.nix 設定檔案中加入 pkgs.<a href="http://www.gnuplot.info/">gnuplot</a>, pkgs.<a href="https://invisible-island.net/ncurses/">ncurses</a>.dev, pkgs.<a href="https://github.com/libgd/libgd">gd</a>, pkgs.<a href="https://www.vim.org/">vim</a>HugeX 與 pkgs.<a href="https://github.com/raysan5/raylib">raylib</a>:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_827306">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">{ pkgs }: {</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">    </code><code class="js plain">deps = [</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">      </code><code class="js plain">pkgs.gnuplot</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">      </code><code class="js plain">pkgs.ncurses.dev</code></div>
<div class="line number5 index4 alt2"><code class="js spaces">      </code><code class="js plain">pkgs.gd</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">      </code><code class="js plain">pkgs.vimHugeX</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">      </code><code class="js plain">pkgs.raylib</code></div>
<div class="line number8 index7 alt1"><code class="js spaces">    </code><code class="js plain">];</code></div>
<div class="line number9 index8 alt2"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>gnuplot: 數值分析繪圖程式庫</p>
<p>gd: 泛用型繪圖程式庫</p>
<p>ncurses: 文字型類 GUI 程式庫</p>
<p>vim: 指令模式編輯器</p>
<p>raylib: 電動遊戲程式庫</p>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>